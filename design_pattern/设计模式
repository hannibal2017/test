设计模式分为三大类：创建型、结构型，行为型。
创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。

结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。

行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、
  备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。

一、创建型：
1、单例模式：见包com.luo.singleton
 1）Singleton，基本实现方式，不适用于多线程方式
 2）SingletonSecond 方法加了锁，适用于多线程情况，但是影响效率
 3）SingletonThird 方法内加锁

2、工厂模式 
 2.1 简单工厂模式
  1）基本，见包com.luo.simpleFactory.basic
   创建鞋工厂，根据传进去的类型来创造鞋。
  2）方法。把每个类型的鞋做成方法，直接调用
  3）静态方法。工厂类直接调用
  这种方式违反了开闭原则，如果此时要加入篮球鞋，那么所有类都要修改。所以需要改进。
 2.2 工厂方法 见包com.luo.factoryMethod
 再提供一个接口来实现来承接对应的鞋产品工厂。
 此时再加上篮球产品，不会影响原来的代码，符合开闭原则，拓展性好。
 2.3、抽象工厂模式 见包com.luo.abstractFactory
   例子：手机加工厂，给手机运营商加工手机，有苹果和三星。分别加工其手机电源，手机屏幕。有不同生产要求。
   该厂有个手机加工工厂抽象类，苹果和三星有各自的产品线工厂。
   此时如果获得小米的订单，继续创造小米工厂就好了。
  抽象工厂模式：https://blog.csdn.net/michael_yt/article/details/82112443